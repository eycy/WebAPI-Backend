openapi: 3.0.0
info:
  version: 1.0.0
  title: Back End API for Dogs
  description: A Dog API.
  contact:
    name: CY
    email: cyyeung321@gmail.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'  
  servers:
    - url: 'https://2864e1bf-8dcd-4a02-8418-0d9d62095657-00-1w1jzy6gmnx40.pike.repl.co/api/v1/'
      description: Development server
tags:
  - name: Users
    description: API endpoints for user management
  - name: dogs
    description: Access and perform CRUD operations for dogs
paths:
  /dogs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric ID of the dog
    get:
      tags:
        - dogs
      description:
        get dog by id
      response:
        '200':
          description: View of an dog record
        '400':
          description: dog not found
    put:
      tags:
        - dogs
      description:
        Update dog by ID.
      responses:
        '200':
          description: Update confirmation and link to record.
        '404':
          description: dog was not found in the DB.
    delete:
      tags:
        - dogs
      description:
        Delete dog by ID.
      responses:
        '200':
          description: Delete confirmation.
        '404':
          description: User was not found in the DB.
  /dogs:
    get:
      tags:
        - dogs
      description: Get all dogs
      responses:
        '200':
          description: List of all dogs
    post:
      tags:
        - dogs
      description:
        Create an dog
      requestBody:
        description: dog in JSON format
        required: true
        content:
          application/json:
            schema:
              $ref: ./dog.json#/definitions/dog
      responses:
        '201':
          description: dog created
  /dogs/search:
    get:
      tags:
        - dogs
      description: Search for dogs
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: Search query string
      responses:
        '200':
          description: List of dogs matching the search query
        '404':
          description: No dogs found matching the search query
  /users:
    put:
      tags:
        - users
      description: Create a user
      requestBody:
        description: User information in JSON format
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/user
      responses:
        '201':
          description: User created
        '500':
          description: Error creating user